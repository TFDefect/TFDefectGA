name: Terraform Bug Detection CI

on:
  push:
    paths:
      - "**.tf"
  pull_request:
    paths:
      - "**.tf"

jobs:
  analyze-terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Utiliser le cache pour Python venv
        uses: actions/cache@v3
        with:
          path: venv
          key: python-venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            python-venv-${{ runner.os }}-

      - name: Installer Python et dépendances (si non en cache)
        run: |
          if [ ! -d "venv" ]; then
            python -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            pip install -e .
          fi

      - name: Utiliser le cache pour Terraform et Java
        id: cache-terraform-java
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform
            /usr/lib/jvm/java-11-openjdk-amd64
          key: terraform-java-${{ runner.os }}

      - name: Installer Java 11 (si non en cache)
        if: steps.cache-terraform-java.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install openjdk-11-jre -y

      - name: Vérifier si Terraform est installé
        run: terraform version || echo "Terraform n'est pas installé"

      - name: Installer Terraform CLI (si non en cache)
        run: |
          if ! command -v terraform &> /dev/null; then
            echo "Terraform non trouvé, installation en cours..."
            sudo apt update
            sudo apt install -y gnupg software-properties-common curl
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install -y terraform
          else
            echo "Terraform est déjà installé"
          fi

      - name: Vérifier Terraform après installation
        run: terraform version

      - name: Installer Terraform CLI (si non en cache)
        if: steps.cache-terraform-java.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install -y terraform

      - name: Formatter et valider Terraform
        run: |
          terraform fmt -recursive
      #   terraform validate

      - name: Exécuter l'analyse Terraform
        run: |
          source venv/bin/activate
          python app/action_runner.py HEAD

      - name: Publier les résultats comme artefact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-analysis-results
          path: output.json
